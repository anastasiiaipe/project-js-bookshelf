{"version":3,"file":"main-63864dc8.js","sources":["../../src/js/loader.js","../../src/js/topBtn.js","../../src/js/render-categories.js","../../src/js/books-API.js","../../src/js/books-page.js"],"sourcesContent":["'use strict';\n\nconst loaderContainer = document.querySelector('.loader');\n\nfunction showLoader() {\n  loaderContainer.classList.remove('visually-hidden');\n}\n\nfunction hideLoader() {\n  loaderContainer.classList.add('visually-hidden');\n}\n\nshowLoader(); // Показати loader перед початком завантаження сторінки\n\nwindow.addEventListener('load', () => {\n  setTimeout(() => {\n    hideLoader();\n  }, 350);\n});\n","// Функція, яка прокручує сторінку на початок\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nconst scrollToTopBtn = document.querySelector('.top-btn');\nscrollToTopBtn.style.display = 'none';\n\n// Показати кнопку, коли користувач прокрутив сторінку\nwindow.addEventListener('scroll', () => {\n  if (window.scrollY > window.innerHeight) {\n    scrollToTopBtn.style.display = 'inline-flex';\n  } else {\n    scrollToTopBtn.style.display = 'none';\n  }\n});\n\n// Встановлення обробника подій для кнопки\nscrollToTopBtn.addEventListener('click', scrollToTop);\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\n//Render one book\nfunction renderOneBook(books) {\n  const booksRendered = books\n    .map(el => {\n      const { _id, book_image, title, author } = el;\n      return `<li class=\"books-box-itm\" id=\"${_id}\">\n      <div class=\"books-box-wrap\">\n              <img\n                class=\"books-img\"\n                src=\"${book_image}\"\n                alt=\"${title}\"\n              />\n              <div class=\"books-overlay\">\n                <a href=\"#\" data-id=\"${_id}\" class=\"books-overlay-text\">\n                quick view </a>\n              </div>\n            </div>\n            <div class=\"books-box-desc\">\n              <p class=\"books-box-desc-title\">${title}</p>\n              <p class=\"books-box-desc-author\">${author}</p>\n            </div> \n            </li>`;\n    })\n    .join('');\n\n  return booksRendered;\n}\n\n//Render top books\nexport const renderTopBooks = (data, booksPerRow) => {\n  if (!data || data.length === 0) {\n    const emptyCategoryHtml = `<div class=\"books-box\"><h2 class=\"books-box-title\">Best Sellers Books</h2>\n    </div>${getEmtyCategoryHtml()}`;\n    return emptyCategoryHtml;\n  } else {\n    const categoriesTopBooks = data\n      .map(el => {\n        const categoryName = el.list_name;\n        const books = renderOneBook(el.books.slice(0, booksPerRow));\n        return `<div class=\"books-box-holder\">\n        <h3 class=\"books-box-subtitle\">${categoryName}</h3>\n         <ul class=\"books-box-list\">${books}</ul>\n           <button data-categoryName=\"${categoryName}\" class=\"books-btn-see-more\" type=\"button\">see more</button>\n      </div>`;\n      })\n      .join('');\n\n    return `<h2 class=\"books-box-title\">Best Sellers Books</h2>${categoriesTopBooks}`;\n  }\n};\n\n//Render categories\nexport const renderCategoriesList = data => {\n  const categoriesItems = data\n    .sort((a, b) => {\n      if (a.list_name < b.list_name) {\n        return -1;\n      }\n      if (a.list_name > b.list_name) {\n        return 1;\n      }\n      return 0;\n    })\n    .map(el => {\n      return `<li class=\"categories-itm\"><a href=\"#\" data-categoryName=\"${el.list_name}\">${el.list_name}</a></li>`;\n    })\n    .join('');\n\n  return ` <li class=\"categories-itm js-categories-current \">\n  <a href=\"#\" data-categoryName=\"all categories\">All categories</a></li>${categoriesItems}`;\n};\n\nfunction getEmtyCategoryHtml() {\n  iziToast.error({\n    message: 'Sorry, no books found.',\n    position: 'topRight',\n  });\n\n  return `</div>\n  <div class=\"empty-category\">\n  <span>Nothing found</span>\n  </div>`;\n}\n\n//Render category books\nexport const renderBooksByCategory = (data, categoryName) => {\n  if (!data || data.length === 0) {\n    const emptyCategoryHtml = `<div class=\"books-box\">\n        <h2 class=\"books-box-title\">${categoryName}</h2>\n        </div>${getEmtyCategoryHtml()}`;\n\n    return emptyCategoryHtml;\n  } else {\n    const books = renderOneBook(data);\n    const categoryHtml = `<h2 class=\"books-box-title\">${categoryName}</h2>\n    <div class=\"books-category-box\">\n      <ul class=\"books-category-list\">${books}</ul>\n    </div>`;\n\n    return categoryHtml;\n  }\n};\n\n// //Render one book\n// function renderOneBook(books) {\n//   const booksRendered = books\n//     .map(el => {\n//       const { _id, book_image, title, author } = el;\n//       return `<li class=\"books-box-itm\" id=\"${_id}\">\n//       <div class=\"books-box-wrap\">\n//               <img\n//                 class=\"books-img\"\n//                 src=\"${book_image}\"\n//                 alt=\"${title}\"\n//               />\n//               <div class=\"books-overlay\">\n//                 <a href=\"#\" data-id=\"${_id}\" class=\"books-overlay-text\">\n//                 quick view </a>\n//               </div>\n//             </div>\n//             <div class=\"books-box-desc\">\n//               <p class=\"books-box-desc-title\">${title}</p>\n//               <p class=\"books-box-desc-author\">${author}</p>\n//             </div>\n//             </li>`;\n//     })\n//     .join('');\n\n//   return booksRendered;\n// }\n// //Render top books\n// export const renderTopBooks = (data, booksPerRow) => {\n//   const categoriesTopBooks = data\n//     .map(el => {\n//       const categoryName = el.list_name;\n//       const books = renderOneBook(el.books.slice(0, booksPerRow));\n//       return `<div class=\"books-box-holder\">\n//         <h3 class=\"books-box-subtitle\">${categoryName}</h3>\n//         <ul class=\"books-box-list\">${books}</ul>\n//         <button data-categoryName=\"${categoryName}\" class=\"books-btn-see-more\" type=\"button\">see more</button>\n//       </div>`;\n//     })\n//     .join('');\n\n//   return `<div class=\"books-container\"><h2 class=\"books-title\">Best Sellers Books</h2>${categoriesTopBooks}</div>`;\n// };\n// //Render categories\n// export const renderCategoriesList = data => {\n//   const categoriesItems = data\n//     .map(el => {\n//       return `<li class=\"categories-itm\"><a href=\"#\" data-categoryName=\"${el.list_name}\">${el.list_name}</a></li>`;\n//     })\n//     .join('');\n\n//   return `<li class=\"categories-itm js-categories-current \"><a href=\"#\" data-categoryName=\"all categories\">All categories</a></li>${categoriesItems}`;\n// };\n// //Render category books\n// export const renderBooksByCategory = data => {\n//   const categoryMarkup = data\n//     .map(el => {\n//       const books = renderOneBook(el);\n//       return `<div class=\"books-category-box\">\n//       <h2 class=\"books-box-title\">${el.list_name}</h2>\n//       <ul class=\"books-category-list\">${books}</ul>\n//     </div>`;\n//     }).join('');\n\n//   return categoryMarkup;\n// };\n\n// //Render one book\n// // function renderOneBook(books) {\n// //   const booksRendered = books\n// //     .map(el => {\n// //       const { _id, book_image, title, author } = el;\n// //       return `<li class=\"books-box-itm\" id=\"${_id}\">\n// //         <div class=\"books-box-wrap\">\n// //                 <img\n// //                   class=\"books-img\"\n// //                   src=\"${book_image}\"\n// //                   alt=\"${title}\"\n// //                 />\n// //                 <div class=\"books-overlay\">\n// //                   <a href=\"#\" data-id=\"${_id}\" class=\"books-overlay-text\">\n// //                   quick view </a>\n// //                 </div>\n// //               </div>\n// //               <div class=\"books-box-desc\">\n// //                 <p class=\"books-box-desc-title\">${title}</p>\n// //                 <p class=\"books-box-desc-author\">${author}</p>\n// //               </div>\n// //               </li>`;\n// //     })\n// //     .join('');\n\n// //   return booksRendered;\n// // }\n// // //Render top books\n// // export const renderTopBooks = (data, booksPerRow) => {\n// //   const categoriesTopBooks = data\n// //     .map(el => {\n// //       const categorieName = el.list_name;\n// //       const books = renderOneBook(el.books.slice(0, booksPerRow));\n// //       return `<div class=\"books-box-holder\">\n// //           <h3 class=\"books-box-subtitle\">${categorieName}</h3>\n// //           <ul class=\"books-box-list\">${books}</ul>\n// //           <button data-categorieName=\"${categorieName}\" class=\"books-btn-see-more\" type=\"button\">see more</button>\n// //         </div>`;\n// //     })\n// //     .join('');\n\n// //   return `<div class=\"books-container\"><h2 class=\"books-title\">Best Sellers Books</h2>${categoriesTopBooks}</div>`;\n// // };\n// // //Render categories\n// // export const renderCategoriesList = data => {\n// //   const categoriesItems = data\n// //     .map(el => {\n// //       return `<li class=\"categories-itm\"><a href=\"#\" data-categorieName=\"${el.list_name}\">${el.list_name}</a></li>`;\n// //     })\n// //     .join('');\n\n// //   return `<li class=\"categories-itm js-categories-current \"><a href=\"#\" data-categorieName=\"\">All categories</a></li>${categoriesItems}`;\n// // };\n// // //Render category books\n// // export const renderBooksByCategory = (data, categoryName) => {\n// //   if (!categoryName) {\n// //     return '';\n// //   }\n// //   const books = renderOneBook(data);\n// //   const categoryMarkup = `<div class=\"books-category-box visually-hidden\">\n// //   <h2 class=\"books-box-title\">${categoryName}</h2>\n// //           <ul class=\"books-category-list\">${books}</ul>\n// //           </div>`;\n// //   return categoryMarkup;\n// // };\n","// import axios from \"axios\";\n// import { renderTopBooks, renderCategoriesList, renderBooksByCategory } from './render-categories.js';\n\n// const BASE_URL = 'https://books-backend.p.goit.global';\n\n// //Fatch for top books\n// let savedFetch = JSON.parse(sessionStorage.getItem('savedfetch')) || '';\n// export const fetchGeneral = async booksPerRow => {\n\n//   if(!savedFetch) {\n//     const endpoint = '/books/top-books/';\n//     const fetchUrl = BASE_URL + endpoint;\n\n//     try {\n//       const response = await axios.get(fetchUrl);\n//       sessionStorage.setItem('savedfetch', JSON.stringify(response.data));\n//       savedFetch = response.data;\n//       return renderTopBooks(response.data, booksPerRow);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   } else {\n//     return renderTopBooks(savedFetch, booksPerRow);\n//   }\n\n// };\n\n// //Fatch for categories\n// export const getCategoryList = async () => {\n//   const endpoint = '/books/category-list/';\n//   const fetchUrl = BASE_URL + endpoint;\n\n//   try {\n//     const response = await axios.get(fetchUrl);\n//     return renderCategoriesList(response.data);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\n// //Fatch for categories books\n// export const getBooksByCategory = async categoryName => {\n//   const endpoint = '/books/category/';\n//   const fetchUrl = BASE_URL + endpoint;\n//   const params = {\n//     category: categoryName,\n//   };\n\n//   try {\n//     const response = await axios.get(fetchUrl, { params });\n//     return renderBooksByCategory(response.data, categoryName);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\n// // повертає дані однієї книги по id\n// export const getBookInfo = async id => {\n//   const endpoint = `/books/${id}`;\n//   const fetchUrl = BASE_URL + endpoint;\n\n//   try {\n//     const response = await axios.get(fetchUrl);\n//     return response.data;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\n// const fetchData = async (endpoint, params = null) => {\n//   const fetchUrl = `${BASE_URL}/books${endpoint}`;\n\n//   try {\n//     const response = await axios.get(fetchUrl, { params });\n//     console.log('Data from server:', response.data)\n//     return response.data;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\n// export const getTopBooks = async (booksPerRow) => {\n//   const data = await fetchData('/top-books/');\n//   return renderTopBooks(data, booksPerRow);\n// };\n\n// export const getCategoryList = async () => {\n//   const data = await fetchData('/category-list/');\n//   return renderCategoriesList(data);\n// };\n\n// // export const getBooksByCategory = async (categoryName = '') => {\n// //   const data = await fetchData('/category?category=', categoryName );\n// //   return renderBooksByCategory(data);\n// // };\n\n// export const getBooksByCategory = async (categoryName = '') => {\n//   const encodedCategoryName = encodeURIComponent(categoryName);\n//   const endpoint = `/category?category=${encodedCategoryName}`;\n\n//   const data = await fetchData(endpoint);\n//   console.log('Category name3:', data);\n//   // return renderBooksByCategory(categoryName, data);\n//   const dataArray = Object.values(data); // Преобразование объекта в массив\n//   return renderBooksByCategory(dataArray);\n// };\n\n// export const getBookInfo = async (id) => {\n//   return fetchData(`/${id}`);\n// };\n// import axios from 'axios';\n// import {\n//   renderTopBooks,\n//   renderCategoriesList,\n//   renderBooksByCategory,\n// } from './render-categories.js';\n\n// const BASE_URL = 'https://books-backend.p.goit.global';\n\n// const fetchData = async (endpoint, params = null) => {\n//   const fetchUrl = `${BASE_URL}/books${endpoint}`;\n\n//   try {\n//     const response = await axios.get(fetchUrl, { params });\n//     console.log('Data from server:', response.data);\n//     return response.data;\n//   } catch (error) {\n//     console.log(error);\n//   }\n// };\n\n// export const getTopBooks = async booksPerRow => {\n//   const data = await fetchData('/top-books/');\n//   return renderTopBooks(data, booksPerRow);\n// };\n\n// export const getCategoryList = async () => {\n//   const data = await fetchData('/category-list/');\n//   return renderCategoriesList(data);\n// };\n\n// export const getBooksByCategory = async (categoryName = '') => {\n//   const data = await fetchData('/category/', { category: categoryName });\n//   return renderBooksByCategory(data);\n// };\n\n// export const getBookInfo = async id => {\n//   return fetchData(`/${id}`);\n// };\n\nimport axios from 'axios';\nimport {\n  renderTopBooks,\n  renderCategoriesList,\n  renderBooksByCategory,\n} from './render-categories.js';\n\nconst BASE_URL = 'https://books-backend.p.goit.global';\n\n//Fatch for top books\nlet savedFetch = JSON.parse(sessionStorage.getItem('savedfetch')) || '';\nexport const getTopBooks = async booksPerRow => {\n  if (!savedFetch) {\n    const endpoint = '/books/top-books/';\n    const fetchUrl = BASE_URL + endpoint;\n\n    try {\n      const response = await axios.get(fetchUrl);\n      sessionStorage.setItem('savedfetch', JSON.stringify(response.data));\n      savedFetch = response.data;\n      return renderTopBooks(response.data, booksPerRow);\n    } catch (error) {\n      console.log(error);\n    }\n  } else {\n    return renderTopBooks(savedFetch, booksPerRow);\n  }\n};\n\n//Fatch for categories\nexport const getCategoryList = async () => {\n  const endpoint = '/books/category-list/';\n  const fetchUrl = BASE_URL + endpoint;\n\n  try {\n    const response = await axios.get(fetchUrl);\n    return renderCategoriesList(response.data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//Fatch for categories books\nexport const getBooksByCategory = async categoryName => {\n  const endpoint = '/books/category/';\n  const fetchUrl = BASE_URL + endpoint;\n  const params = {\n    category: categoryName,\n  };\n\n  try {\n    const response = await axios.get(fetchUrl, { params });\n    return renderBooksByCategory(response.data, categoryName);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// повертає дані однієї книги по id\nexport const getBookInfo = async id => {\n  const endpoint = `/books/${id}`;\n  const fetchUrl = BASE_URL + endpoint;\n\n  try {\n    const response = await axios.get(fetchUrl);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  getTopBooks,\n  getCategoryList,\n  getBooksByCategory,\n} from './books-API.js';\n\nasync function displayCategories() {\n  const categoriesContainer = document.querySelector('.categories-list');\n\n  // Отримуємо список категорій\n  const renderedCategories = await getCategoryList();\n\n  // Відображаємо категорії на сторінці\n  categoriesContainer.innerHTML = renderedCategories;\n\n  // Додаємо обробник подій для категорій\n  categoriesContainer.addEventListener('click', handleCategoryClick);\n\n  return categoriesContainer; // Повертаємо контейнер категорій\n}\n\n// Додаємо обробник подій для кнопок \"See more\" у кожній категорії\ndocument.addEventListener('click', async function (event) {\n  if (event.target && event.target.classList.contains('books-btn-see-more')) {\n    const catName = event.target.dataset.categoryname;\n    console.log(catName);\n    await displayBooksByCategory(null, catName); // Передаємо другий аргумент\n  }\n});\n\n// Функція для обробки кліків на категорії\nasync function handleCategoryClick(e) {\n  e.preventDefault();\n\n  const target = e.target;\n  const catName = target.dataset.categoryname;\n\n  // Отримуємо контейнер категорій\n  const categoriesContainer = await displayCategories();\n\n  // Якщо натиснута категорія \"All categories\", відображаємо усі книги\n  if (catName === 'all categories') {\n    displayTopBooks();\n  } else {\n    // В іншому випадку відображаємо книги за вибраною категорією\n    await displayBooksByCategory(categoriesContainer, catName);\n  }\n}\n\n// Функція для відображення книг за вибраною категорією - ПРАЦЮЄЄЄЄ\nasync function displayBooksByCategory(categoriesContainer, catName) {\n  const booksContainer = document.querySelector('.books-box');\n  if (!booksContainer) {\n    console.error('Element with class \"books-category-box\" not found.');\n    return;\n  }\n  // Отримуємо книги за вибраною категорією\n  const renderedBooks = await getBooksByCategory(catName);\n\n  // Відображаємо книги на сторінці\n  booksContainer.innerHTML = renderedBooks;\n  console.log(renderedBooks);\n}\n\nasync function displayTopBooks() {\n  const booksPerRow = 5; // Задаємо кількість книг на рядок\n  const topBooksContainer = document.querySelector('.books-box');\n\n  // Отримуємо популярні книги\n  const renderedBooks = await getTopBooks(booksPerRow);\n\n  // Відображаємо книги на сторінці\n  topBooksContainer.innerHTML = renderedBooks;\n}\n// Відображаємо популярні книги та категорії при завантаженні сторінки\ndisplayTopBooks();\ndisplayCategories();\n"],"names":["loaderContainer","showLoader","hideLoader","scrollToTop","scrollToTopBtn","renderOneBook","books","el","_id","book_image","title","author","renderTopBooks","data","booksPerRow","getEmtyCategoryHtml","categoryName","renderCategoriesList","a","b","iziToast","renderBooksByCategory","BASE_URL","savedFetch","getTopBooks","fetchUrl","response","axios","error","getCategoryList","getBooksByCategory","params","displayCategories","categoriesContainer","renderedCategories","handleCategoryClick","event","catName","displayBooksByCategory","e","displayTopBooks","booksContainer","renderedBooks","topBooksContainer"],"mappings":"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"}