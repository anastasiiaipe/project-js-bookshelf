{"version":3,"file":"main-f9a817e7.js","sources":["../../src/js/loader.js","../../src/js/topBtn.js","../../src/js/render-categories.js","../../src/js/books-API.js","../../src/js/books-page.js"],"sourcesContent":["'use strict';\n\nconst loaderContainer = document.querySelector('.loader');\n\nfunction showLoader() {\n  loaderContainer.classList.remove('visually-hidden');\n}\n\nfunction hideLoader() {\n  loaderContainer.classList.add('visually-hidden');\n}\n\nshowLoader(); // Показати loader перед початком завантаження сторінки\n\nwindow.addEventListener('load', () => {\n  setTimeout(() => {\n    hideLoader();\n  }, 350);\n});\n","// Функція, яка прокручує сторінку на початок\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nconst scrollToTopBtn = document.querySelector('.top-btn');\nscrollToTopBtn.style.display = 'none';\n\n// Показати кнопку, коли користувач прокрутив сторінку\nwindow.addEventListener('scroll', () => {\n  if (window.scrollY > window.innerHeight) {\n    scrollToTopBtn.style.display = 'inline-flex';\n  } else {\n    scrollToTopBtn.style.display = 'none';\n  }\n});\n\n// Встановлення обробника подій для кнопки\nscrollToTopBtn.addEventListener('click', scrollToTop);\n","//Render one book\nfunction renderOneBook(books) {\n  const booksRendered = books\n    .map(el => {\n      const { _id, book_image, title, author } = el;\n      return `<li class=\"books-box-itm\" id=\"${_id}\">\n      <div class=\"books-box-wrap\">\n              <img\n                class=\"books-img\"\n                src=\"${book_image}\"\n                alt=\"${title}\"\n              />\n              <div class=\"books-overlay\">\n                <a href=\"#\" data-id=\"${_id}\" class=\"books-overlay-text\">\n                quick view </a>\n              </div>\n            </div>\n            <div class=\"books-box-desc\">\n              <p class=\"books-box-desc-title\">${title}</p>\n              <p class=\"books-box-desc-author\">${author}</p>\n            </div> \n            </li>`;\n    })\n    .join('');\n\n  return booksRendered;\n}\n//Render top books\nexport const renderTopBooks = (data, booksPerRow) => {\n  const categoriesTopBooks = data\n    .map(el => {\n      const categoryName = el.list_name;\n      const books = renderOneBook(el.books.slice(0, booksPerRow));\n      return `<div class=\"books-box-holder\">\n        <h3 class=\"books-box-subtitle\">${categoryName}</h3>\n        <ul class=\"books-box-list\">${books}</ul>\n        <button data-categoryName=\"${categoryName}\" class=\"books-btn-see-more\" type=\"button\">see more</button>\n      </div>`;\n    })\n    .join('');\n\n  return `<div class=\"books-container\"><h2 class=\"books-title\">Best Sellers Books</h2>${categoriesTopBooks}</div>`;\n};\n//Render categories\nexport const renderCategoriesList = data => {\n  const categoriesItems = data\n    .map(el => {\n      return `<li class=\"categories-itm\"><a href=\"#\" data-categoryName=\"${el.list_name}\">${el.list_name}</a></li>`;\n    })\n    .join('');\n\n  return `<li class=\"categories-itm js-categories-current \"><a href=\"#\" data-categoryName=\"all categories\">All categories</a></li>${categoriesItems}`;\n};\n//Render category books\nexport const renderBooksByCategory = data => {\n  const categoryMarkup = data\n    .map(el => {\n      const books = renderOneBook(el);\n      return `<div class=\"books-category-box\">\n      <h2 class=\"books-box-title\">${el.list_name}</h2>\n      <ul class=\"books-category-list\">${books}</ul>\n    </div>`;\n    }).join('');\n\n  return categoryMarkup;\n};\n\n//Render one book\n// function renderOneBook(books) {\n//   const booksRendered = books\n//     .map(el => {\n//       const { _id, book_image, title, author } = el;\n//       return `<li class=\"books-box-itm\" id=\"${_id}\">\n//         <div class=\"books-box-wrap\">\n//                 <img\n//                   class=\"books-img\"\n//                   src=\"${book_image}\"\n//                   alt=\"${title}\"\n//                 />\n//                 <div class=\"books-overlay\">\n//                   <a href=\"#\" data-id=\"${_id}\" class=\"books-overlay-text\">\n//                   quick view </a>\n//                 </div>\n//               </div>\n//               <div class=\"books-box-desc\">\n//                 <p class=\"books-box-desc-title\">${title}</p>\n//                 <p class=\"books-box-desc-author\">${author}</p>\n//               </div> \n//               </li>`;\n//     })\n//     .join('');\n\n//   return booksRendered;\n// }\n// //Render top books\n// export const renderTopBooks = (data, booksPerRow) => {\n//   const categoriesTopBooks = data\n//     .map(el => {\n//       const categorieName = el.list_name;\n//       const books = renderOneBook(el.books.slice(0, booksPerRow));\n//       return `<div class=\"books-box-holder\">\n//           <h3 class=\"books-box-subtitle\">${categorieName}</h3>\n//           <ul class=\"books-box-list\">${books}</ul>\n//           <button data-categorieName=\"${categorieName}\" class=\"books-btn-see-more\" type=\"button\">see more</button>\n//         </div>`;\n//     })\n//     .join('');\n\n//   return `<div class=\"books-container\"><h2 class=\"books-title\">Best Sellers Books</h2>${categoriesTopBooks}</div>`;\n// };\n// //Render categories\n// export const renderCategoriesList = data => {\n//   const categoriesItems = data\n//     .map(el => {\n//       return `<li class=\"categories-itm\"><a href=\"#\" data-categorieName=\"${el.list_name}\">${el.list_name}</a></li>`;\n//     })\n//     .join('');\n\n//   return `<li class=\"categories-itm js-categories-current \"><a href=\"#\" data-categorieName=\"\">All categories</a></li>${categoriesItems}`;\n// };\n// //Render category books\n// export const renderBooksByCategory = (data, categoryName) => {\n//   if (!categoryName) {\n//     return '';\n//   }\n//   const books = renderOneBook(data);\n//   const categoryMarkup = `<div class=\"books-category-box visually-hidden\">\n//   <h2 class=\"books-box-title\">${categoryName}</h2>\n//           <ul class=\"books-category-list\">${books}</ul>\n//           </div>`;\n//   return categoryMarkup;\n// };\n","\nimport axios from \"axios\";\nimport { renderTopBooks, renderCategoriesList, renderBooksByCategory } from './render-categories.js';\n\nconst BASE_URL = 'https://books-backend.p.goit.global';\n\nconst fetchData = async (endpoint, params = null) => {\n  const fetchUrl = `${BASE_URL}/books${endpoint}`;\n\n  try {\n    const response = await axios.get(fetchUrl, { params });\n    console.log('Data from server:', response.data)\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTopBooks = async (booksPerRow) => {\n  const data = await fetchData('/top-books/');\n  return renderTopBooks(data, booksPerRow);\n};\n\nexport const getCategoryList = async () => {\n  const data = await fetchData('/category-list/');\n  return renderCategoriesList(data);\n};\n\n\n// export const getBooksByCategory = async (categoryName = '') => {\n//   const data = await fetchData('/category?category=', categoryName );\n//   return renderBooksByCategory(data);\n// };\n\nexport const getBooksByCategory = async (categoryName = '') => {\n  const encodedCategoryName = encodeURIComponent(categoryName);\n  const endpoint = `/category?category=${encodedCategoryName}`;\n\n  const data = await fetchData(endpoint);\n  console.log('Category name3:', data);\n  return renderBooksByCategory(categoryName, data);\n};\n\nexport const getBookInfo = async (id) => {\n  return fetchData(`/${id}`);\n};\n\n\n\n\n\n// import axios from \"axios\";\n// // import { renderTopBooks, renderCategoriesList, renderBooksByCategory } from './render-categories.js';\n\n// const BASE_URL = 'https://books-backend.p.goit.global/books';\n\n// const fetchData = async (endpoint, params = null) => {\n//   try {\n//     const response = await axios.get(`${BASE_URL}${endpoint}`, { params });\n//     console.log('Data from server:', response.data)\n//     return response.data;\n//   } catch (error) {\n//     console.error('Error fetching data:', error);\n//     throw error; // Пробрасываем ошибку дальше для обработки в вызывающем коде\n//   }\n// };\n\n// // Получение списка категорий\n// export const getCategoryList = async () => {\n//   return fetchData('/category-list');\n// };\n\n// // Получение списка топовых книг\n// export const getTopBooks = async () => {\n//   return fetchData('/top-books');\n// };\n// // Получение книг по категории\n// export const getBooksByCategory = async (categoryName = '') => {\n//   return fetchData('/category', { category: categoryName });\n// };\n// // Получение информации о книге по ID\n// export const getBookById = async (id) => {\n//   return fetchData(`/${id}`);\n// };\n\n","// Импортируем функции из books-API.js и render-categories.js\nimport { getCategoryList, getTopBooks, getBooksByCategory } from './books-API.js';\nimport { renderCategoriesList, renderTopBooks, renderBooksByCategory } from './render-categories.js';\n\nconst booksContainer = document.querySelector('.books-box');\nconst categoriesListContainer = document.querySelector('.categories-list');\n\nconst BOOKS_PER_ROW_MAP = {\n    'default': 3,\n    'largeScreen': 5,\n    'smallScreen': 1\n};\n\n// Function to display books\nasync function showBooks(renderedContent) {\n    booksContainer.innerHTML = renderedContent;\n    const titleElement = document.querySelector('.books-box-desc-title');\n    \n    if (titleElement) {\n        wrapLastWord(titleElement);\n    }\n}\n// Function to display categories\nasync function showCategories() {\n    const renderedCategories = await getCategoryList();\n    categoriesListContainer.innerHTML = renderedCategories;\n}\n\n// Function to display top books\nexport async function showTopBooks() {\n    const windowWidth = window.innerWidth;\n    const booksPerRow = determineBooksPerRow(windowWidth);\n    const renderedTop = await getTopBooks(booksPerRow);\n    showBooks(renderedTop);\n}\n\n// Function to display books by category\nexport async function showBooksByCategory(categoryName) {\n    const renderedBooks = await getBooksByCategory(categoryName);\n    return showBooks(renderedBooks);\n}\n  \n  \n// Function to wrap the last word in the title\nfunction wrapLastWord(titleElement) {\n      const textContent = titleElement.textContent.split(\" \");\n      const lastWord = textContent.pop();\n    const updatedContent = textContent.join(\" \") + (textContent.length > 0 ? ` <span class=\"books-title-color\">${lastWord}</span>` : lastWord);\n    titleElement.innerHTML = updatedContent;\n}\n// Function to determine the number of books per row based on window width\nfunction determineBooksPerRow(windowWidth) {\n    if (windowWidth >= 1440) {\n        return BOOKS_PER_ROW_MAP.largeScreen;\n    } else if (windowWidth < 768) {\n        return BOOKS_PER_ROW_MAP.smallScreen;\n    } else {\n        return BOOKS_PER_ROW_MAP.default;\n    }\n}\n\n// Initialize the page\nif (booksContainer) {\n    showTopBooks();\n    showCategories();\n    \n    categoriesListContainer.addEventListener('click', handleCategoryClick);\n    booksContainer.addEventListener('click', handleSeeMoreClick);\n}\n\n// Event handler for category click\nfunction handleCategoryClick(e) {\n    e.preventDefault();\n    const target = e.target;\n    \n    if (target.tagName === 'A') {\n        const categoryName = target.dataset.categoryName;\n        \n        categoriesListContainer.querySelector('.js-categories-current').classList.remove('js-categories-current');\n        target.classList.add('js-categories-current');\n\n        if (categoryName === 'all categories') {\n            // Якщо натиснуто \"Усі категорії\", показати TopBooks\n            showTopBooks();\n        } else {\n            // Якщо натиснуто конкретну категорію, показати книги з цієї категорії\n            showBooksByCategory(categoryName);\n        }\n    }\n}\n\n// Event handler for \"See More\" click\nfunction handleSeeMoreClick(e) {\n    e.preventDefault();\n    const target = e.target;\n    \n    if (target.classList.contains('books-btn-see-more')) {\n        const categoryName = target.dataset.categoryName;\n        \n        categoriesListContainer.querySelector('.js-categories-current').classList.remove('js-categories-current');\n        categoriesListContainer.querySelector(`[data-categoryName=\"${categoryName}\"]`).classList.add('js-categories-current');\n        \n        showBooksByCategory(categoryName);\n    }\n}\n\n// import {\n//   getTopBooks,\n//   getCategoryList,\n//   getBooksByCategory,\n// } from './books-API.js';\n\n// const booksContainer = document.querySelector('.books-box');\n// const categoriesListContainer = document.querySelector('.categories-list');\n\n// const BOOKS_PER_ROW_MAP = {\n//   default: 3,\n//   largeScreen: 5,\n//   smallScreen: 1,\n// };\n\n// // Function to display books\n// async function showBooks(renderedContent) {\n//   booksContainer.innerHTML = renderedContent;\n//   const titleElement = document.querySelector('.books-box-desc-title');\n\n//   if (titleElement) {\n//     wrapLastWord(titleElement);\n//   }\n// }\n// // Function to display categories\n// async function showCategories() {\n//   const renderedCategories = await getCategoryList();\n//   categoriesListContainer.innerHTML = renderedCategories;\n// }\n\n// // Function to display top books\n// export async function showTopBooks() {\n//   const windowWidth = window.innerWidth;\n//   const booksPerRow = determineBooksPerRow(windowWidth);\n//   const renderedTop = await getTopBooks(booksPerRow);\n//   showBooks(renderedTop);\n// }\n\n// //===========================================================\n// // Function to display books by category\n\n// // Отримуємо посилання на елемент, в якому будуть відображатися книги\n// const booksListContainer = document.querySelector('.books-category-list');\n// export async function showBooksByCategory(categoryName) {\n//   console.log(categoryName);\n//   //   const renderedBooks = await getBooksByCategory(categoryName);\n//   try {\n//     // Отримуємо книги вибраної категорії з API\n//     const books = await getBooksByCategory(categoryName);\n\n//     // Перевіряємо, чи є книги в цій категорії\n//     if (books.length > 0) {\n//       const booksHTML = renderBooksByCategory(books, categoryName);\n//       // Якщо книги є, відображаємо їх на сторінці\n//       booksListContainer.innerHTML = booksHTML;\n//     } else {\n//       // Якщо книги не знайдено, виводимо повідомлення про це користувачу\n//       booksListContainer.innerHTML = '<p>No books found in this category</p>';\n//     }\n//   } catch (error) {\n//     // Якщо сталася помилка під час отримання даних з API, виводимо повідомлення про це користувачу\n//     console.error('Error fetching books by category:', error);\n//     booksListContainer.innerHTML =\n//       '<p>Failed to fetch books. Please try again later.</p>';\n//   }\n//   //   return showBooks(renderedBooks);\n// }\n\n// // Отримуємо всі елементи категорій\n// const categoryItems = document.querySelectorAll('.categories-itm');\n\n// categoryItems.forEach(item => {\n//   item.addEventListener('click', function (event) {\n//     // Забороняємо перехід за замовчуванням посилання\n//     event.preventDefault();\n\n//     // Отримуємо назву категорії, на яку натиснули\n//     const categoryName = this.dataset.categorieName;\n\n//     // Викликаємо функцію для відображення книг вибраної категорії\n//     showBooksByCategory(categoryName);\n//   });\n// });\n// //===============================================================\n// // Function to wrap the last word in the title\n// function wrapLastWord(titleElement) {\n//   const textContent = titleElement.textContent.split(' ');\n//   const lastWord = textContent.pop();\n//   const updatedContent =\n//     textContent.join(' ') +\n//     (textContent.length > 0\n//       ? ` <span class=\"books-title-color\">${lastWord}</span>`\n//       : lastWord);\n//   titleElement.innerHTML = updatedContent;\n// }\n// // Function to determine the number of books per row based on window width\n// function determineBooksPerRow(windowWidth) {\n//   if (windowWidth >= 1440) {\n//     return BOOKS_PER_ROW_MAP.largeScreen;\n//   } else if (windowWidth < 768) {\n//     return BOOKS_PER_ROW_MAP.smallScreen;\n//   } else {\n//     return BOOKS_PER_ROW_MAP.default;\n//   }\n// }\n\n// // Initialize the page\n// if (booksContainer) {\n//   showTopBooks();\n//   showCategories();\n\n//   categoriesListContainer.addEventListener('click', handleCategoryClick);\n//   booksContainer.addEventListener('click', handleSeeMoreClick);\n// }\n\n// // Event handler for category click\n// async function handleCategoryClick(e) {\n//   e.preventDefault();\n//   const target = e.target;\n//   const categoryName = target.dataset.categorieName;\n\n//   console.log('Category Name:', categoryName);\n//   if (categoryName === `all categories`) {\n//     try {\n//       const resp = await getTopBooks();\n//       booksContainer.insertAdjacentHTML(\n//         'afterbegin',\n//         '<h2 class=\"books-box-title\">Best Sellers <span class=\"books-title-span\">Books</span></h2>'\n//       );\n//       booksContainer.insertAdjacentHTML(\n//         'beforeend',\n//         renderBooksByCategory(resp.data, categoryName)\n//       );\n//       categoriesListContainer\n//         .querySelector('.js-categories-current')\n//         .classList.remove('js-categories-current');\n//       target.classList.add('js-categories-current');\n//     } catch (error) {\n//       console.error('Books was not found :', error.message);\n//     }\n//     return;\n//   } else {\n//     try {\n//       const data = await getBooksByCategory(categoryName);\n//       booksContainer.insertAdjacentHTML('beforeend', showBooksByCategory(data));\n//       categoriesListContainer\n//         .querySelector('.js-categories-current')\n//         .classList.remove('js-categories-current');\n//       target.classList.add('js-categories-current');\n//     } catch (error) {\n//       console.error('Books was not found :', error.message);\n//     }\n//   }\n// }\n\n// //   if (target.tagName === 'A') {\n// //     const categoryName = target.dataset.categoryName;\n\n// //     categoriesListContainer\n// //       .querySelector('.js-categories-current')\n// //       .classList.remove('js-categories-current');\n// //     target.classList.add('js-categories-current');\n\n// //     if (categoryName) {\n// //       showBooksByCategory(categoryName);\n// //     } else {\n// //       showTopBooks();\n// //     }\n// //   }\n\n// // Event handler for \"See More\" click\n// function handleSeeMoreClick(e) {\n//   e.preventDefault();\n//   const target = e.target;\n\n//   if (target.classList.contains('books-btn-see-more')) {\n//     const categoryName = target.dataset.categoryName;\n\n//     categoriesListContainer\n//       .querySelector('.js-categories-current')\n//       .classList.remove('js-categories-current');\n//     categoriesListContainer\n//       .querySelector(`[data-categoryName=\"${categoryName}\"]`)\n//       .classList.add('js-categories-current');\n\n//     showBooksByCategory(categoryName);\n//   }\n// }\n"],"names":["loaderContainer","showLoader","hideLoader","scrollToTop","scrollToTopBtn","renderOneBook","books","el","_id","book_image","title","author","renderTopBooks","data","booksPerRow","categoryName","renderCategoriesList","renderBooksByCategory","BASE_URL","fetchData","endpoint","params","fetchUrl","response","axios","error","getTopBooks","getCategoryList","getBooksByCategory","booksContainer","categoriesListContainer","BOOKS_PER_ROW_MAP","showBooks","renderedContent","titleElement","wrapLastWord","showCategories","renderedCategories","showTopBooks","windowWidth","determineBooksPerRow","renderedTop","showBooksByCategory","renderedBooks","textContent","lastWord","updatedContent","handleCategoryClick","handleSeeMoreClick","target"],"mappings":"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"}