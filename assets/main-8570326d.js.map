{"version":3,"file":"main-8570326d.js","sources":["../../src/js/loader.js","../../src/js/topBtn.js","../../src/js/books-API.js","../../src/js/books-page.js"],"sourcesContent":["'use strict';\n\nconst loaderContainer = document.querySelector('.loader');\n\nfunction showLoader() {\n  loaderContainer.classList.remove('visually-hidden');\n}\n\nfunction hideLoader() {\n  loaderContainer.classList.add('visually-hidden');\n}\n\nshowLoader(); // Показати loader перед початком завантаження сторінки\n\nwindow.addEventListener('load', () => {\n  setTimeout(() => {\n    hideLoader();\n  }, 350);\n});\n","// Функція, яка прокручує сторінку на початок\nfunction scrollToTop() {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n}\n\nconst scrollToTopBtn = document.querySelector('.top-btn');\nscrollToTopBtn.style.display = 'none';\n\n// Показати кнопку, коли користувач прокрутив сторінку\nwindow.addEventListener('scroll', () => {\n  if (window.scrollY > window.innerHeight) {\n    scrollToTopBtn.style.display = 'inline-flex';\n  } else {\n    scrollToTopBtn.style.display = 'none';\n  }\n});\n\n// Встановлення обробника подій для кнопки\nscrollToTopBtn.addEventListener('click', scrollToTop);\n","\nimport axios from \"axios\";\n// import { renderTopBooks, renderCategoriesList, renderBooksByCategory } from './render-categories.js';\n\nconst BASE_URL = 'https://books-backend.p.goit.global/books';\n\nconst fetchData = async (endpoint, params = null) => {\n  try {\n    const response = await axios.get(`${BASE_URL}${endpoint}`, { params });\n    console.log('Data from server:', response.data)\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error; // Пробрасываем ошибку дальше для обработки в вызывающем коде\n  }\n};\n\n// Получение списка категорий\nexport const getCategoryList = async () => {\n  return fetchData('/category-list');\n};\n\n// Получение списка топовых книг\nexport const getTopBooks = async () => {\n  return fetchData('/top-books');\n};\n// Получение книг по категории\nexport const getBooksByCategory = async (categoryName = '') => {\n  return fetchData('/category', { category: categoryName });\n};\n// Получение информации о книге по ID\nexport const getBookById = async (id) => {\n  return fetchData(`/${id}`);\n};\n\n","import {\n  getTopBooks,\n  getCategoryList,\n  getBooksByCategory,\n} from './books-API.js';\n\nconst booksContainer = document.querySelector('.books-box');\nconst categoriesListContainer = document.querySelector('.categories-list');\n\nconst BOOKS_PER_ROW_MAP = {\n  default: 3,\n  largeScreen: 5,\n  smallScreen: 1,\n};\n\n// Function to display books\nasync function showBooks(renderedContent) {\n  booksContainer.innerHTML = renderedContent;\n  const titleElement = document.querySelector('.books-box-desc-title');\n\n  if (titleElement) {\n    wrapLastWord(titleElement);\n  }\n}\n// Function to display categories\nasync function showCategories() {\n  const renderedCategories = await getCategoryList();\n  categoriesListContainer.innerHTML = renderedCategories;\n}\n\n// Function to display top books\nexport async function showTopBooks() {\n  const windowWidth = window.innerWidth;\n  const booksPerRow = determineBooksPerRow(windowWidth);\n  const renderedTop = await getTopBooks(booksPerRow);\n  showBooks(renderedTop);\n}\n\n//===========================================================\n// Function to display books by category\n\n// Отримуємо посилання на елемент, в якому будуть відображатися книги\nconst booksListContainer = document.querySelector('.books-category-list');\nexport async function showBooksByCategory(categoryName) {\n  console.log(categoryName);\n  //   const renderedBooks = await getBooksByCategory(categoryName);\n  try {\n    // Отримуємо книги вибраної категорії з API\n    const books = await getBooksByCategory(categoryName);\n\n    // Перевіряємо, чи є книги в цій категорії\n    if (books.length > 0) {\n      const booksHTML = renderBooksByCategory(books, categoryName);\n      // Якщо книги є, відображаємо їх на сторінці\n      booksListContainer.innerHTML = booksHTML;\n    } else {\n      // Якщо книги не знайдено, виводимо повідомлення про це користувачу\n      booksListContainer.innerHTML = '<p>No books found in this category</p>';\n    }\n  } catch (error) {\n    // Якщо сталася помилка під час отримання даних з API, виводимо повідомлення про це користувачу\n    console.error('Error fetching books by category:', error);\n    booksListContainer.innerHTML =\n      '<p>Failed to fetch books. Please try again later.</p>';\n  }\n  //   return showBooks(renderedBooks);\n}\n\n// Отримуємо всі елементи категорій\nconst categoryItems = document.querySelectorAll('.categories-itm');\n\ncategoryItems.forEach(item => {\n  item.addEventListener('click', function (event) {\n    // Забороняємо перехід за замовчуванням посилання\n    event.preventDefault();\n\n    // Отримуємо назву категорії, на яку натиснули\n    const categoryName = this.dataset.categorieName;\n\n    // Викликаємо функцію для відображення книг вибраної категорії\n    showBooksByCategory(categoryName);\n  });\n});\n//===============================================================\n// Function to wrap the last word in the title\nfunction wrapLastWord(titleElement) {\n  const textContent = titleElement.textContent.split(' ');\n  const lastWord = textContent.pop();\n  const updatedContent =\n    textContent.join(' ') +\n    (textContent.length > 0\n      ? ` <span class=\"books-title-color\">${lastWord}</span>`\n      : lastWord);\n  titleElement.innerHTML = updatedContent;\n}\n// Function to determine the number of books per row based on window width\nfunction determineBooksPerRow(windowWidth) {\n  if (windowWidth >= 1440) {\n    return BOOKS_PER_ROW_MAP.largeScreen;\n  } else if (windowWidth < 768) {\n    return BOOKS_PER_ROW_MAP.smallScreen;\n  } else {\n    return BOOKS_PER_ROW_MAP.default;\n  }\n}\n\n// Initialize the page\nif (booksContainer) {\n  showTopBooks();\n  showCategories();\n\n  categoriesListContainer.addEventListener('click', handleCategoryClick);\n  booksContainer.addEventListener('click', handleSeeMoreClick);\n}\n\n// Event handler for category click\nasync function handleCategoryClick(e) {\n  e.preventDefault();\n  const target = e.target;\n  const categoryName = target.dataset.categorieName;\n\n  console.log('Category Name:', categoryName);\n  if (categoryName === `all categories`) {\n    try {\n      const resp = await getTopBooks();\n      booksContainer.insertAdjacentHTML(\n        'afterbegin',\n        '<h2 class=\"books-box-title\">Best Sellers <span class=\"books-title-span\">Books</span></h2>'\n      );\n      booksContainer.insertAdjacentHTML(\n        'beforeend',\n        renderBooksByCategory(resp.data, categoryName)\n      );\n      categoriesListContainer\n        .querySelector('.js-categories-current')\n        .classList.remove('js-categories-current');\n      target.classList.add('js-categories-current');\n    } catch (error) {\n      console.error('Books was not found :', error.message);\n    }\n    return;\n  } else {\n    try {\n      const data = await getBooksByCategory(categoryName);\n      booksContainer.insertAdjacentHTML('beforeend', showBooksByCategory(data));\n      categoriesListContainer\n        .querySelector('.js-categories-current')\n        .classList.remove('js-categories-current');\n      target.classList.add('js-categories-current');\n    } catch (error) {\n      console.error('Books was not found :', error.message);\n    }\n  }\n}\n\n//   if (target.tagName === 'A') {\n//     const categoryName = target.dataset.categoryName;\n\n//     categoriesListContainer\n//       .querySelector('.js-categories-current')\n//       .classList.remove('js-categories-current');\n//     target.classList.add('js-categories-current');\n\n//     if (categoryName) {\n//       showBooksByCategory(categoryName);\n//     } else {\n//       showTopBooks();\n//     }\n//   }\n\n// Event handler for \"See More\" click\nfunction handleSeeMoreClick(e) {\n  e.preventDefault();\n  const target = e.target;\n\n  if (target.classList.contains('books-btn-see-more')) {\n    const categoryName = target.dataset.categoryName;\n\n    categoriesListContainer\n      .querySelector('.js-categories-current')\n      .classList.remove('js-categories-current');\n    categoriesListContainer\n      .querySelector(`[data-categoryName=\"${categoryName}\"]`)\n      .classList.add('js-categories-current');\n\n    showBooksByCategory(categoryName);\n  }\n}\n"],"names":["loaderContainer","showLoader","hideLoader","scrollToTop","scrollToTopBtn","BASE_URL","fetchData","endpoint","params","response","axios","error","getCategoryList","getTopBooks","getBooksByCategory","categoryName","booksContainer","categoriesListContainer","showBooks","renderedContent","titleElement","wrapLastWord","showCategories","renderedCategories","showTopBooks","renderedTop","booksListContainer","showBooksByCategory","books","booksHTML","categoryItems","item","event","textContent","lastWord","updatedContent","handleCategoryClick","handleSeeMoreClick","e","target","resp","data"],"mappings":"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"}